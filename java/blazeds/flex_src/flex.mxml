<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:flexiframe="http://code.google.com/p/flex-iframe/"
			   creationComplete="creationCompleteHandler(event)"
			   minWidth="1024" minHeight="790" skinClass="skin.App1" xmlns:lib="lib.*" xmlns:billing="component.billing.*" xmlns:component="component.*">
	<fx:Style source="flex.css"/>
	<s:states>
		<s:State name="main"/>
		<s:State name="sub"/>
	</s:states>
	<fx:Script>
		<![CDATA[
			import component.member.Join;
			import component.member.UserInformationVO;
			import component.notic.NoticVO;
			
			import flash.net.navigateToURL;
			
			import lib.CustomEvent;
			import lib.RO;
			import lib.SLibrary;
			
			import mx.collections.ArrayCollection;
			import mx.controls.ToolTip;
			import mx.core.IFlexDisplayObject;
			import mx.core.IUIComponent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ModuleEvent;
			import mx.events.StateChangeEvent;
			import mx.managers.PopUpManager;
			import mx.managers.ToolTipManager;
			import mx.modules.IModuleInfo;
			import mx.modules.ModuleManager;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			public var bLogin:Boolean = false;
			public var login_id:String = null;
			private var modules:Array = null;
			
			private var ro:RO = new RO();
			private var RO_DESTINATION:String = "WEB";
			private var noticIdxArr:Array = new Array();
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				currentState = "main";
				
				// 회원 가입 Window 띄우기
				this.mlLogin.child.addEventListener("join", join_button_clickHandler);
				this.mlLogin.child.addEventListener("login", loginCheckHandler);
				
			}
			
			public function notic():void {
				// 공지사항
				ro.set(RO_DESTINATION, notic_ResultEventHandler);
				ro.method.getNoticMain(4);
			}
			
			
			
			private function notic_ResultEventHandler(event:ResultEvent):void {
				
				var ac:ArrayCollection = event.result as ArrayCollection;
				var vo:NoticVO = null;
				
				for (var i:int = 0; i < ac.length; i++) {
					vo = ac.getItemAt(i) as NoticVO;
					
					if (i == 0)	{ notic0.text = "  "+vo.title+"  "+vo.timeWrite.substr(0,10); noticIdxArr.push(vo.idx);}
					else if ( i == 1) { notic1.text = "  "+vo.title+"  "+vo.timeWrite.substr(0,10); noticIdxArr.push(vo.idx);}
					else if ( i == 2) { notic2.text = "  "+vo.title+"  "+vo.timeWrite.substr(0,10); noticIdxArr.push(vo.idx);}
					else if ( i == 3) { notic3.text = "  "+vo.title+"  "+vo.timeWrite.substr(0,10); noticIdxArr.push(vo.idx);}
					else break;
					
				}
				
				
			}
			// 회원가입 Window
			protected function join_button_clickHandler(event:MouseEvent):void
			{
				var join:Join = Join(PopUpManager.createPopUp( this, Join , true));
				join.addEventListener("close", joinCloseHandler);
			}
			// 로그인 되어 있을 경우 처리
			protected function loginCheckHandler(event:CustomEvent):void
			{
				var obj:Object = this.mlLogin.child;
				var uvo:UserInformationVO = UserInformationVO(event.obj)
				obj.loginOK( uvo );
				login_id = uvo.user_id;
				bLogin = true;
				
				var obj2:Object = this.mlHandPhone.child;
				obj2.isValid();
				obj2.cReturnPhone.returnPhoneTextInput.text = uvo.phone_return;
			}
			
			private function alert(msg:String):void {
				
				var myPattern:RegExp = /\'/g;
				var u:URLRequest = new URLRequest("javascript:alert('" + msg.replace(myPattern,"\\'") + "')");
				navigateToURL(u,"_self");
			}
			
			private function joinCloseHandler(event:Event):void {
				event.target.removeEventListener("close", joinCloseHandler);
				PopUpManager.removePopUp(event.target as IFlexDisplayObject);
			}
			
			// 전화번호 추가
			public function addPhone(str:String):void {
				
				var obj:Object = this.mlHandPhone.child;
				obj.cPhone.addList(str);
				
			}
			
			// 엑셀로더 전화번호 추가
			public function addPhoneArray(arr:Array):void {
				
				var obj:Object = this.mlHandPhone.child;
				obj.cPhone.addListArray(arr);
			}
			
			public function viewIframe(type:String):void {
				
				var url:String = "";
				if (type == "personal") { url = "/note/personal.html"; popupTitle.text = "개인정보보호정책";}
				else if (type == "promise")	{ url = "/note/promise.html"; popupTitle.text = "이용약관";}
				else if (type == "spam") { url = "/note/spam.html"; popupTitle.text = "광고스팸문자";}

				iframe.source = url;
				iframeContainer.visible = true;
				iframe.visible = true;
			
			}
			
			public var myTip:ToolTip;
			private function loginTip(event:Event):void {
				if (!bLogin) createBigTip(event);
			}
			private function loginTipDestroy():void {
				if (!bLogin) destroyBigTip();
			}
			private function createBigTip(event:Event):void {
				var s:String = "로그인후 해당 메뉴를 이용 하실 수 있습니다.";
				myTip = ToolTipManager.createToolTip(s,5,40,null,IUIComponent(event.currentTarget)) as ToolTip;
				myTip.setStyle("backgroundColor",0xFFCC00);
			}
			
			private function destroyBigTip():void {
				ToolTipManager.destroyToolTip(myTip);
			}
			
			
			// 사용자 건수 초기화
			public function userInfoInit():void {
				if (this.mlLogin != null) {
					var obj:Object = this.mlLogin.child;
					obj.creationCompleteHandler();
				}
			}
			
			public function allTabInit():void {
				//addressInit();
				//excelInit();
				//sentInit();
				//billingInit();
			}
			
			public function loadEmoticon():void {
				
					this.mlEmoti.url = "module/Emoticon.swf";
					this.mlEmoti.loadModule();
				
			}
			
			public function unloadEmoticon():void {
				
				this.mlEmoti.unloadModule();
			}
			
			public function setMessage(msg:String):void {
				
				if (this.mlHandPhone != null) {
					var obj:Object = this.mlHandPhone.child;
					obj.cMessage.setMessage(msg);
				}
			}
			
			public function moveMenu(url:String):void {
				
				if (bLogin) {
					currentState = "sub";
					//if ( this.mlContext != null) this.mlContext.unloadModule();
					this.mlContext.url = url;
					mlContext.loadModule();
				}else {
					ExternalInterface.call("alert","로그인 후 이용 가능 합니다.");
				}
				
			}
			
			public function moveMenuNoLogin(url:String):void {
				currentState = "sub";
				//if ( this.mlContext != null) this.mlContext.unloadModule();
				this.mlContext.url = url;
				mlContext.loadModule();
			}
			
			public function sendEmail():void {
				var u:URLRequest = new URLRequest("mailto:munja119@qxl.co.kr");
				
				navigateToURL(u,"_self");
			}
			
			// family site
			[Bindable]public var cards:ArrayCollection = new ArrayCollection(
				[ {label:"eXtreme PC", data:"http://www.extremepc.co.kr"}, 
					{label:"NS이스토어", data:"http://www.nsestore.com"}, 
					{label:"QXL", data:"http://www.nsestore.com"} ]);
			
			private function changeHandler(event:Event):void {
				
				var url:String = ComboBox(event.target).selectedItem.data;
				
				var u:URLRequest = new URLRequest(url);
				navigateToURL(u,"_blank");
			} 
			
			// 선택된 공지사항 인덱스
			public var noticIdx:int = 0;
			protected function notic_clickHandler(idx:int):void
			{
				noticIdx = noticIdxArr[idx];
				moveMenuNoLogin('module/Notic.swf');
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
	</fx:Declarations>
	
	<!-- 삼각형 배경 -->
	<s:BitmapImage id="main_left" x="0" y="0" x.sub="-200" y.sub="-200" source="@Embed(source='/assets/main_left.png')"/>
	
	<!-- 로고 -->
	<s:Group buttonMode="true" useHandCursor="true" click="{currentState='main'}">
		<s:BitmapImage x="40" y="25" source="@Embed('/assets/logo.png')" />
	</s:Group>
	
	<!-- 홈, 회원가입, 이메일 -->
	<s:HGroup height="10" gap="10" x="860" y="10">
		<s:Group buttonMode="true" useHandCursor="true" click="{currentState='main'}">
			<s:BitmapImage source="@Embed(source='assets/home.png')"/>
		</s:Group>
		<s:Group buttonMode="true" useHandCursor="true" click="{moveMenuNoLogin('module/Join.swf')}">
			<s:BitmapImage source="@Embed(source='assets/join_text.png')"/>
		</s:Group>
		<s:Group buttonMode="true" useHandCursor="true" click="{sendEmail()}">
			<s:BitmapImage source="@Embed(source='assets/email.png')"/>
		</s:Group>
	</s:HGroup>
	
	
	
	<!-- 메뉴 -->
	<component:Menu x="230" y="23" depth="3" />
	
	<!-- 단가안내,세금계산서 -->
	<s:HGroup gap="0" depth="4"
			  x="770" y="52">
		<s:Group buttonMode="true" useHandCursor="true" click="{moveMenuNoLogin('module/CostInfo.swf')}">
			<s:BitmapImage source="@Embed(source='assets/mini_menu_1.png')"/>
		</s:Group>
		<s:Group buttonMode="true" useHandCursor="true" click="{ExternalInterface.call('alert','준비중입니다.')}">
			<s:BitmapImage source="@Embed(source='assets/mini_menu_2.png')"/>
		</s:Group>
	</s:HGroup>
	
	<!-- 핸드폰 -->
	<mx:ModuleLoader x="65" y="110" id="mlHandPhone" url="module/HandPhone.swf" depth="3">
		<mx:unload><![CDATA[ if(parent != null){ parent.removeChild(this); } ]]></mx:unload>
	</mx:ModuleLoader>
	
	
	<s:HGroup depth="4"
			  x="80" y="600">
		<mx:ModuleLoader id="mlLogin" url="module/Login.swf" left="0" right="0" top="0" bottom="0">
			<mx:unload><![CDATA[ if(parent != null){ parent.removeChild(this); } ]]></mx:unload>
		</mx:ModuleLoader>	
	</s:HGroup>
	
	<s:VGroup>
		<!-- 메인 -->
		<s:Group width="1024" height="740" includeIn="main" depth="2" >
			<s:BitmapImage y="43" right="15" source="@Embed(source='assets/costinfo.png')"/>
			<s:Group x="696" y="150" buttonMode="true" useHandCursor="true" click="{moveMenuNoLogin('module/CostInfo.swf')}">
				<s:BitmapImage source="@Embed(source='assets/view1.png')"/>
			</s:Group>
			<s:BitmapImage y="200" right="15" source="@Embed(source='assets/function_info.png')"/>
			<s:Group x="543" y="202" buttonMode="true" useHandCursor="true" click="{ExternalInterface.call('alert','준비중입니다.')}">
				<s:BitmapImage source="@Embed(source='assets/view1.png')"/>
			</s:Group>
			<component:MainEmoticon x="361" y="320" />
			<s:Group width="940" x="66" y="570">
				<s:Rect left="0" right="0" top="0" bottom="0" radiusX="15"><s:fill><s:SolidColor color="0xffffff" /></s:fill></s:Rect>
				<s:Rect left="0" right="0" top="0" bottom="0" radiusX="15"><s:stroke><s:SolidColorStroke weight="1" color="0xff0000" /></s:stroke></s:Rect>
				
				
				<s:HGroup paddingTop="10" paddingLeft="240" paddingBottom="10" gap="20">
					
	
					<s:BitmapImage source="@Embed(source='assets/account_no.png')" />
					<s:BitmapImage source="@Embed(source='assets/soge.png')" />
					<s:VGroup>
						<s:BitmapImage source="@Embed(source='assets/notic_text.png')" />
						<s:Label id="notic0" text="" buttonMode="true" useHandCursor="true" click="notic_clickHandler(0)"  />
						<s:Label id="notic1" text="" buttonMode="true" useHandCursor="true" click="notic_clickHandler(1)"  />
						<s:Label id="notic2" text="" buttonMode="true" useHandCursor="true" click="notic_clickHandler(2)"  />
						<s:Label id="notic3" text="" buttonMode="true" useHandCursor="true" click="notic_clickHandler(3)"  />
						<s:HGroup>
							<s:BitmapImage source="@Embed(source='assets/ask_no.png')" />	
							<s:BitmapImage source="@Embed(source='assets/faq.png')" />	
						</s:HGroup>
					</s:VGroup>
				</s:HGroup>
				<s:Group x="460" y="12" height="15" buttonMode="true" useHandCursor="true"  click="{moveMenuNoLogin('module/Sangpum.swf')}">
					<s:BitmapImage source="@Embed(source='assets/sangpum_go.png')"/>
				</s:Group>
			</s:Group>
		</s:Group>
	
		<!-- 서브페이지 -->
		<s:Group width="1024" includeIn="sub" depth="2">
			<s:layout>
				<s:VerticalLayout horizontalAlign="right" paddingTop="80" gap="0"/>
			</s:layout>
			<s:BitmapImage source="@Embed(source='assets/sub_title.png')"/>
			<s:Group x="307" width="717" height="500">
				<s:Rect left="0" right="0" top="0" bottom="0" radiusX="15"><s:fill><s:SolidColor color="0xffffff" /></s:fill></s:Rect>
				<s:Rect left="0" right="0" top="0" bottom="0" radiusX="15"><s:stroke><s:SolidColorStroke weight="2" color="0xe80500" /></s:stroke></s:Rect>
				<s:Group left="20" right="20" top="20" bottom="20">
					<s:ModuleLoader left="0" right="0" id="mlContext">
						<s:unload><![CDATA[ if(parent != null){ parent.removeChild(this); }	]]></s:unload>
					</s:ModuleLoader>	
				</s:Group>
				
			</s:Group>
		</s:Group>
		
		<!-- copy right -->
		<s:Group width="1024">
			<s:ComboBox change="changeHandler(event);" color="0x000000" dataProvider="{cards}"
						focusAlpha="0" focusEnabled="false" dropShadowVisible="true" rollOverColor="0xeeeeee" selectedIndex="0"
						selectionColor="0xeeeeee" alpha="0.5"
						x="860" y="5"/>
			<s:VGroup width="1024" paddingTop="10" paddingLeft="80">
				<s:HGroup paddingLeft="140">
					<s:Group buttonMode="true" useHandCursor="true" click="{viewIframe('personal')}"><s:BitmapImage source="@Embed(source='assets/personal.png')" /></s:Group>	
					<s:Group buttonMode="true" useHandCursor="true" click="{viewIframe('promise')}"><s:BitmapImage source="@Embed(source='assets/pramise.png')" /></s:Group>
					<s:Group buttonMode="true" useHandCursor="true" click="{viewIframe('spam')}"><s:BitmapImage source="@Embed(source='assets/spamUntitled-3.png')" /></s:Group>
				</s:HGroup>
				<s:BitmapImage source="@Embed(source='assets/copy_right.png')" />
			</s:VGroup>
		</s:Group>
	</s:VGroup>
	
	
	<s:SkinnableContainer width="700" id="iframeContainer" depth="5" visible="false" skinClass="skin.IframeSkin" top="50" left="120">
		<s:Button id="closeIframe" top="4" right="10" skinClass="skin.IframeCloseButton" width="46" height="46" click="this.iframeContainer.visible=false;iframe.visible=false;" />
		<s:Label id="popupTitle" left="40" top="13" fontSize="24" fontWeight="bold" color="0xffffff" text="이용약관" />
		<lib:IFrame id="iframe" top="54"
					label="Yahoo"
					visible="false"
					source="about:blank"
					width="100%"
					height="100%"/>
	</s:SkinnableContainer>
	<mx:ModuleLoader id="mlEmoti" left="240" top="32"/>
	
</s:Application>
