<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" layout="absolute" width="100%" height="100%" creationComplete="creationCompleteHandler(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import component.member.UserInformationVO;
			
			import lib.BooleanAndDescriptionVO;
			import lib.JuminBunhoValidator;
			import lib.RO;
			import lib.SLibrary;
			
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			import mx.validators.ValidationResult;
			
			private var ro:RO = new RO();
			private var RO_DESTINATION:String = "WEB";
			private var roStat:String = "";
			
			private var VALID_COLOR:Number = 0x0000FF;
			private var INVALID_COLOR:Number = 0xFF0000;
			
			private function checkAll():Boolean {
				
				var b:Boolean = false;
				if (tipw.getStyle("borderColor") == VALID_COLOR
					&&tiPwRe.getStyle("borderColor") == VALID_COLOR
					&&tiName.getStyle("borderColor") == VALID_COLOR
					&&tiHp.getStyle("borderColor") == VALID_COLOR
					&&tiReturn.getStyle("borderColor") == VALID_COLOR
				) b = true;
				
				return b;
			}
			
			// 아이디 검사
			protected function tiId_keyUpHandler(event:KeyboardEvent):void
			{
				var ti:TextInput = TextInput(event.currentTarget);
				sv.minLength = 4;
				sv.maxLength = 12;
				sv.tooShortError = "4자리 이상 입력하세요";
				sv.tooLongError = "12자리 이상 입력하실 수 없습니다.";
				
				var arr:Array = StringValidator.validateString(sv, ti.text);
				
				if (arr.length > 0) {
					ti.setStyle("borderColor",INVALID_COLOR);
					idHelp.text = ValidationResult(arr[0]).errorMessage;
				}else {
					
					idHelp.text = "";
					dupleIdCheck(ti.text);
				}
			}
			// 비밀번호검사
			protected function tipw_keyUpHandler(event:KeyboardEvent):void
			{
				var ti:TextInput = TextInput(event.currentTarget);
				sv.minLength = 4;
				sv.maxLength = 12;
				sv.tooShortError = "4자리 이상 입력하세요";
				sv.tooLongError = "12자리 이상 입력하실 수 없습니다.";
				
				var arr:Array = StringValidator.validateString(sv, ti.text);
				
				if (arr.length > 0) {
					ti.setStyle("borderColor",INVALID_COLOR);
					pwHelp.text = ValidationResult(arr[0]).errorMessage;
				}else {
					ti.setStyle("borderColor",VALID_COLOR);
					pwHelp.text = "확인";
				}
			}
			// 비밀번호 확인 검사
			protected function tiPwRe_keyUpHandler(event:KeyboardEvent):void
			{
				var ti:TextInput = TextInput(event.currentTarget);
				sv.minLength = 4;
				sv.maxLength = 12;
				sv.tooShortError = "4자리 이상 입력하세요";
				sv.tooLongError = "12자리 이상 입력하실 수 없습니다.";
				
				var arr:Array = StringValidator.validateString(sv, ti.text);
				
				if (arr.length > 0) {
					ti.setStyle("borderColor",INVALID_COLOR);
					pwReHelp.text = ValidationResult(arr[0]).errorMessage;
				}else {
					if (tipw.text == ti.text) {
						ti.setStyle("borderColor",VALID_COLOR);
						pwReHelp.text = "확인";
					}else {
						pwReHelp.text = "비밀번호와 일치 하지 않습니다.";
					}
				}
			}
			
			// 이름 검사
			protected function tiName_keyUpHandler(event:KeyboardEvent):void
			{
				var ti:TextInput = TextInput(event.currentTarget);
				sv.minLength = 2;
				sv.maxLength = 20;
				sv.tooShortError = "2자리 이상 입력하세요";
				sv.tooLongError = "10자리 이상 입력하실 수 없습니다.";
				
				var arr:Array = StringValidator.validateString(sv, ti.text);
				
				if (arr.length > 0) {
					ti.setStyle("borderColor",INVALID_COLOR);
					nameHelp.text = ValidationResult(arr[0]).errorMessage;
				}else {
					ti.setStyle("borderColor",VALID_COLOR);
					nameHelp.text = "확인";
				}
			}
			
			// 주민 검사
			protected function tiJumin_keyUpHandler(event:KeyboardEvent):void
			{
				var jv:JuminBunhoValidator = new JuminBunhoValidator();
				var ti:TextInput = TextInput(event.currentTarget);
				var rslt:String = null;
				jv.minLength = 13;
				jv.maxLength = 14;
				jv.tooShortError = "13자리 이상 입력하세요";
				jv.tooLongError = "13자리 이상 입력하실 수 없습니다.";
				
				var arr:Array = StringValidator.validateString(jv, ti.text);
				
				if (arr.length > 0) {
					ti.setStyle("borderColor",INVALID_COLOR);
					juminHelp.text = ValidationResult(arr[0]).errorMessage;
				}else {
					rslt = SLibrary.checkJumin(ti.text);
					if (rslt == null)
						dupleJuminCheck(ti.text);
					else
						juminHelp.text = rslt;
					
				}
			}
			
			
			// 핸드폰 검사
			protected function tiHp_keyUpHandler(event:KeyboardEvent):void
			{
				var ti:TextInput = TextInput(event.currentTarget);
				sv.minLength = 4;
				sv.maxLength = 12;
				sv.tooShortError = "10자리 이상 입력하세요";
				sv.tooLongError = "13자리 이상 입력하실 수 없습니다.";
				
				var arr:Array = StringValidator.validateString(sv, ti.text);
				
				if (arr.length > 0) {
					ti.setStyle("borderColor",INVALID_COLOR);
					hpHelp.text = ValidationResult(arr[0]).errorMessage;
				}else {
					ti.setStyle("borderColor",VALID_COLOR);
					hpHelp.text = "";
				}
			}
			
			// 회신번호 검사
			protected function tiReturn_keyUpHandler(event:KeyboardEvent):void
			{
				tiReturn.setStyle("borderColor",VALID_COLOR);
				returnHelp.text = "";
			}
			
			
			/*###############################
			#	RemoteObject				#
			###############################*/
			private function remoteObjectInit(stat:String):void {
				
				this.roStat = stat;
			}
			
			private function remoteObjectFaultEventHandler(event:FaultEvent):void{
				
				trace(event.fault);
				SLibrary.alert(event.fault.faultString);
			}
			
			// 아이디 중복 확인
			protected function dupleIdCheck(id:String):void {
				
				if (id != "") {
					if (roStat != "ID") {
						remoteObjectInit("ID");
						ro.addEventListener(ResultEvent.RESULT,idCheck_ResultEventHandler);
					}
					ro.method.checkID( id );
				}
			}			
			private function idCheck_ResultEventHandler(event:ResultEvent):void {
				
				var bVO:BooleanAndDescriptionVO = event.result as BooleanAndDescriptionVO;
				if (bVO.bResult) {
					tiId.setStyle("borderColor",VALID_COLOR);
					idHelp.text = "확인";
				} else {
					tiId.setStyle("borderColor",INVALID_COLOR);
					idHelp.text = "사용할수 없는 아이디 입니다.";
				}
			}
			
			// 주민번호 중복 확인
			protected function dupleJuminCheck(jm:String):void {
				
				if (jm != "") {
					if (roStat != "JM") {
						remoteObjectInit("JM");
						ro.addEventListener(ResultEvent.RESULT,juminCheck_ResultEventHandler);
					}
					ro.method.checkJumin( jm );
				}
			}			
			private function juminCheck_ResultEventHandler(event:ResultEvent):void {
				
				var bVO:BooleanAndDescriptionVO = event.result as BooleanAndDescriptionVO;
				if (bVO.bResult) {
					tiJumin.setStyle("borderColor",VALID_COLOR);
					juminHelp.text = "확인";
				} else {
					tiJumin.setStyle("borderColor",INVALID_COLOR);
					juminHelp.text = "가입된 주민등록 번호입니다.";
				}
			}
			// 수정하기
			protected function modifyBtn_clickHandler(event:MouseEvent):void
			{
				if (checkAll() == true) {
					if (roStat != "JO") {
						remoteObjectInit("JO");
					}
					ro.set(RO_DESTINATION, modify_ResultEventHandler);
					ro.method.modify( tiId.text, tipw.text, tiPwRe.text, tiName.text, tiJumin.text, tiHp.text, tiReturn.text );
				} else {
					SLibrary.alert("잘못된 정보가 있습니다.");
				}
			}
			
			private function modify_ResultEventHandler(event:ResultEvent):void {
				
				var bVO:BooleanAndDescriptionVO = event.result as BooleanAndDescriptionVO;
				if (bVO.bResult) {
					SLibrary.alert("수정되었습니다.");
					parentApplication.currentState='main';
				} else {
					SLibrary.alert(bVO.strDescription);
				}
			}
			
			protected function cancelBtn_clickHandler(event:MouseEvent):void
			{
				parentApplication.currentState='main';
			}
			
			
			
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				ro.set(RO_DESTINATION, memberOk_ResultEventHandler);
				ro.method.getUserInformation();				
			}
			
			protected function memberOk_ResultEventHandler(event:ResultEvent):void
			{
				var info:UserInformationVO = UserInformationVO(event.result);
				if (info != null) {
					tiId.text = info.user_id;
					tiName.text = info.user_name;
					tiJumin.text = info.jumin_no;
					tiHp.text = info.hp;
					tiReturn.text = info.phone_return;
					
				}
					
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:StringValidator id="sv" property="text" trigger="{tiId}" triggerEvent="keyup" />
	</fx:Declarations>
	<s:Group>
		<s:layout>
			<s:VerticalLayout gap="10"/>
		</s:layout>
		
		<s:Group width="100%">
			<s:BitmapImage left="10" source="@Embed(source='assets/modify_title.png')"/>
			<s:Label top="4" right="0" text=" 홈 &gt; 정보수정"/>
		</s:Group>
		
		<s:BitmapImage width="675" source="@Embed(source='assets/sub_title_under.png')" fillMode="scale"/>
		
		<s:HGroup height="30" verticalAlign="bottom">
			<s:BitmapImage source="@Embed(source='assets/join_subtitle.png')"/>
			<s:BitmapImage source="@Embed(source='assets/join_req.png')"/>
		</s:HGroup>
		
		<s:Rect width="100%" height="2"><s:fill><s:SolidColor color="0xe80500" /></s:fill></s:Rect>
		
		<!-- 아이디 -->
		<s:HGroup verticalAlign="middle">
			<s:HGroup width="100" verticalAlign="middle"><s:BitmapImage source="@Embed(source='assets/join_id.png')"/></s:HGroup>
			<s:Label id="tiId"/><s:Label id="idHelp" text="" />
		</s:HGroup>
		<s:Rect width="100%" height="1"><s:fill><s:SolidColor color="0xeeeeee" /></s:fill></s:Rect>
		<!-- 비밀번호 -->
		<s:HGroup verticalAlign="middle">
			<s:HGroup width="100" verticalAlign="middle"><s:BitmapImage source="@Embed(source='assets/join_pwd.png')"/></s:HGroup>
			<s:TextInput id="tipw" keyUp="tipw_keyUpHandler(event)" displayAsPassword="true"/><s:Label id="pwHelp" text="" />
		</s:HGroup>
		<s:Rect width="100%" height="1"><s:fill><s:SolidColor color="0xeeeeee" /></s:fill></s:Rect>
		<!-- 비밀번호1 -->
		<s:HGroup verticalAlign="middle">
			<s:HGroup width="100" verticalAlign="middle"><s:BitmapImage source="@Embed(source='assets/join_pwd1.png')"/></s:HGroup>
			<s:TextInput id="tiPwRe" keyUp="tiPwRe_keyUpHandler(event)" displayAsPassword="true"/><s:Label id="pwReHelp" text="" />
		</s:HGroup>
		<s:Rect width="100%" height="1"><s:fill><s:SolidColor color="0xeeeeee" /></s:fill></s:Rect>
		<!-- 이름 -->
		<s:HGroup verticalAlign="middle">
			<s:HGroup width="100" verticalAlign="middle"><s:BitmapImage source="@Embed(source='assets/join_name.png')"/></s:HGroup>
			<s:TextInput id="tiName" borderColor="0x0000FF" keyUp="tiName_keyUpHandler(event)"/><s:Label id="nameHelp" text="" />
		</s:HGroup>
		<s:Rect width="100%" height="1"><s:fill><s:SolidColor color="0xeeeeee" /></s:fill></s:Rect>
		<!-- 주민등록번호 -->
		<s:HGroup verticalAlign="middle">
			<s:HGroup width="100" verticalAlign="middle"><s:BitmapImage source="@Embed(source='assets/join_jumin.png')"/></s:HGroup>
			<s:Label id="tiJumin"/><s:Label id="juminHelp" text="" />
		</s:HGroup>
		<s:Rect width="100%" height="1"><s:fill><s:SolidColor color="0xeeeeee" /></s:fill></s:Rect>
		<!-- 휴대폰번호 -->
		<s:HGroup verticalAlign="middle">
			<s:HGroup width="100" verticalAlign="middle"><s:BitmapImage source="@Embed(source='assets/join_hp.png')"/></s:HGroup>
			<s:TextInput id="tiHp" borderColor="0x0000FF" keyUp="tiHp_keyUpHandler(event)" restrict="0-9"/>
			<s:Label id="hpHelp" text="숫자만 입력 가능 합니다." />
		</s:HGroup>
		<s:Rect width="100%" height="1"><s:fill><s:SolidColor color="0xeeeeee" /></s:fill></s:Rect>
		<!-- 회신번호 -->
		<s:HGroup verticalAlign="middle">
			<s:HGroup width="100" verticalAlign="middle"><s:BitmapImage source="@Embed(source='assets/join_phone.png')"/></s:HGroup>
			<s:TextInput id="tiReturn" borderColor="0x0000FF" keyUp="tiReturn_keyUpHandler(event)"  restrict="0-9"/><s:Label id="returnHelp" text="숫자만 입력 가능 합니다." />
		</s:HGroup>
		
		<s:Rect width="100%" height="1"><s:fill><s:SolidColor color="0xe80500" /></s:fill></s:Rect>
		
		<s:HGroup width="100%" horizontalAlign="center">
			<s:Group id="joinBtn" buttonMode="true" useHandCursor="true" click="modifyBtn_clickHandler(event)">
				<s:BitmapImage source="@Embed(source='assets/modify_ok.png')"/>
			</s:Group>
			
			<s:Group id="cancelBtn" buttonMode="true" useHandCursor="true" click="cancelBtn_clickHandler(event)">
				<s:BitmapImage source="@Embed(source='assets/join_calcel.png')"/>
			</s:Group>	
		</s:HGroup>
		
		
		
		
	</s:Group>
	
	
</mx:Module>
