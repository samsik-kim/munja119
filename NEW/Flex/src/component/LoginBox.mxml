<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="creationCompleteHandler()"
		 width="210" height="154">
	<fx:Metadata>
		[Event(name="join", type="flash.events.MouseEvent")]
		[Event(name="login", type="lib.CustomEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import component.member.Join;
			import component.member.UserInformationVO;
			
			import lib.BooleanAndDescriptionVO;
			import lib.CustomEvent;
			import lib.RO;
			import lib.SLibrary;
			
			import mx.core.IFlexDisplayObject;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			private var RO_DESTINATION:String = "WEB";
			private var ro:RO = new RO();
			
			[Bindable]
			private var userName:String = "";
			
			[Bindable]
			private var point:String = "0";
			
			public function loginOK(vo:UserInformationVO):void {
				
				this.setCurrentState( "userInfo" );
				login.visible = false;
				loginInfo.visible = true;
				
				userName = vo.user_name;
				point = SLibrary.addComma( vo.point );

			}
			
			public function loginNO():void {
				
				this.setCurrentState( "login" );
			}
			
			public function creationCompleteHandler():void
			{
				ro.set(RO_DESTINATION, loginOk_ResultEventHandler);
				ro.method.getUserInformation();
			}
			protected function loginOk_ResultEventHandler(event:ResultEvent):void
			{
				var info:UserInformationVO = UserInformationVO(event.result);
				if (info != null)
					dispatchEvent(new CustomEvent("login",info));
			}
			
			protected function login_id_focusInHandler(event:FocusEvent):void
			{
				
				if (login_id.getStyle("color") == "0xaaaaaa") {
					login_id.text = "";
					login_id.setStyle("color", "0x000000");
					
				}
			}
			
			protected function login_pw_focusInHandler(event:FocusEvent):void
			{
				if (login_pw.getStyle("color") == "0xaaaaaa") {
					login_pw.text = "";
					login_pw.setStyle("color", "0x000000");
					login_pw.displayAsPassword = true;
				}
			}
			
			
			
			protected function login_button_clickHandler(event:MouseEvent):void
			{
				if (login_id.text == "") {
					SLibrary.alert("아이디를 입력하세요");
				}else if (login_pw.text == "") {
					SLibrary.alert("비밀번호를 입력하세요");
				}else {
					
					ro.set(RO_DESTINATION, login_ResultEventHandler);
					ro.method.login(login_id.text, login_pw.text);
				}
			}
			private function login_ResultEventHandler(event:ResultEvent):void {
				
				var bVO:BooleanAndDescriptionVO = event.result as BooleanAndDescriptionVO;
				if (bVO.bResult) {
					creationCompleteHandler();
				} else {
					SLibrary.alert("로그인 실패.");
				}
			}
			
			
			protected function join_button_clickHandler(event:MouseEvent):void
			{
				dispatchEvent(new MouseEvent("join"));
			}
			
			protected function iframeClick(type:String, event:MouseEvent):void
			{
				parentDocument.viewIframe(type);
			}
			
			protected function logout_button_clickHandler(event:MouseEvent):void
			{
				ro.set(RO_DESTINATION, logout_ResultEventHandler);
				ro.method.logout_session();
			}
			
			protected function modify_button_clickHandler(event:MouseEvent):void
			{
				ro.set(RO_DESTINATION, logout_ResultEventHandler);
				ro.method.logout_session();
			}
			
			private function logout_ResultEventHandler(event:ResultEvent):void {
				
				var bVO:BooleanAndDescriptionVO = event.result as BooleanAndDescriptionVO;
				if (bVO.bResult) {
					SLibrary.javascript("alert('정상적으로 로그아웃 되었습니다.');window.location.reload();");
				} else {
					SLibrary.alert("로그아웃 실패.");
				}
			}
			
			
			public function moveState(name:String):void {
				currentState = name;
			}
			
			protected function charge_clickHandler(event:MouseEvent):void
			{
				parentApplication.moveMenu('module/Billing.swf');
			}
			
			protected function coupon_clickHandler(event:MouseEvent):void
			{
				var key:String = couponText.text;
				if (key == "") {
					ExternalInterface.call("alert","쿠폰번호를 입력 하세요.");
				}else {
					ro.set(RO_DESTINATION, coupon_ResultEventHandler);
					ro.method.setCoupon(key);	
				}
				
			}
			
			protected function coupon_ResultEventHandler(event:ResultEvent):void
			{
				var rslt:String = event.result as String;
				if (rslt == null || rslt == "") {
					ExternalInterface.call("alert", "등록 되었습니다.");
					creationCompleteHandler();
				} else {
					ExternalInterface.call("alert", rslt);
				}
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="login"/>
		<s:State name="userInfo"/>
	</s:states>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Group width="100%">
		<s:Rect left="0" right="0" bottom="0" top="0">
			<s:stroke>
				<s:SolidColorStroke color="0xCCCCCC" weight="5" />
			</s:stroke>
		</s:Rect>
		<s:VGroup id="login" includeIn="login" left="19" right="19" top="14" bottom="14" horizontalAlign="center" >
			<s:VGroup gap="10">
				<s:HGroup>
					<s:Image source="images/main_24.png" />
					<s:TextInput id="login_id" width="120" prompt="id"/>
				</s:HGroup>
				<s:HGroup>
					<s:Image source="images/main_27.png" />
					<s:TextInput id="login_pw" width="120" prompt="password" displayAsPassword="true" enter="login_button_clickHandler(null)"/>
				</s:HGroup>
				<s:Image id="login_button" source="images/main_29.png" click="login_button_clickHandler(event)" buttonMode="true" useHandCursor="true"/>
			</s:VGroup>
			<s:HGroup>
				<s:Image id="idsearch_button" source="images/main_34.png" click="{ExternalInterface.call('alert','고객센터로 연락 주시기 바랍니다.')}" buttonMode="true" useHandCursor="true"/>
				<s:Image id="join_button" source="images/main_32.png" click="{parentApplication.moveMenuNoLogin('module/Join.swf')}" buttonMode="true" useHandCursor="true"/>
			</s:HGroup>
		</s:VGroup>
		<s:VGroup id="loginInfo" includeIn="userInfo"  left="19" right="19" top="14" bottom="14" horizontalAlign="left" gap="10" >
			<s:HGroup width="100%">
				<s:Label text="{userName}" fontSize="12" color="0x1377d4" fontWeight="bold" /><s:Label fontSize="12" text=" 님 안녕하세요." />	
			</s:HGroup>
			
			<s:Label text="사용가능건수" fontSize="12" />
			<s:HGroup verticalAlign="middle">
				<s:Label text="{point}" fontWeight="bold" fontSize="26" />
				<s:Label text=" 건" fontSize="12" />
				<s:Label text="충전하기" buttonMode="true" useHandCursor="true" click="charge_clickHandler(event)" />
			</s:HGroup>
			<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="right">
				<s:Label text="정보수정" click="{parentApplication.moveMenu('module/Modify.swf')}" buttonMode="true" useHandCursor="true"/>
				<s:Label text="로그아웃" click="logout_button_clickHandler(event)" buttonMode="true" useHandCursor="true"/>	
			</s:HGroup>
			<s:HGroup verticalAlign="middle">
				<s:TextInput id="couponText" prompt="쿠폰번호 입력.." />
				<s:Label text="등록" click="coupon_clickHandler(event)" />
			</s:HGroup>
		</s:VGroup>
		
	</s:Group>
</s:Group>
